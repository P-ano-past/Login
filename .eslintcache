[{"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\index.js":"1","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\App.js":"2","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Landing\\Landing.js":"3","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Utils\\UsernameContext\\UsernameContext.js":"4","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\SignInForm.js":"5","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\RegistrationForm.js":"6","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Dashboard\\Dashboard.js":"7","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Create\\CreatePost\\CreatePost.js":"8","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Settings\\Settings.js":"9","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Dashboard\\NewPost\\NewPost.js":"10","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Public.js":"11","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Feed.js":"12","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Footer\\Footer.js":"13","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Footer\\Search.js":"14","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Sidenav\\Sidenav.js":"15","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Profile\\Profile.js":"16","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Profile\\ProfileFeed\\ProfileFeed.js":"17"},{"size":454,"mtime":1615319794154,"results":"18","hashOfConfig":"19"},{"size":1871,"mtime":1620339086911,"results":"20","hashOfConfig":"19"},{"size":9170,"mtime":1620070465411,"results":"21","hashOfConfig":"19"},{"size":139,"mtime":1608769579655,"results":"22","hashOfConfig":"19"},{"size":6408,"mtime":1615315915521,"results":"23","hashOfConfig":"19"},{"size":5217,"mtime":1619545437382,"results":"24","hashOfConfig":"19"},{"size":8442,"mtime":1621489491381,"results":"25","hashOfConfig":"19"},{"size":660,"mtime":1610654151699,"results":"26","hashOfConfig":"19"},{"size":3150,"mtime":1612991252321,"results":"27","hashOfConfig":"19"},{"size":2130,"mtime":1620070388785,"results":"28","hashOfConfig":"19"},{"size":1233,"mtime":1620152608004,"results":"29","hashOfConfig":"19"},{"size":7091,"mtime":1622662686434,"results":"30","hashOfConfig":"19"},{"size":392,"mtime":1620070421198,"results":"31","hashOfConfig":"19"},{"size":2569,"mtime":1613429208433,"results":"32","hashOfConfig":"19"},{"size":7186,"mtime":1621452515370,"results":"33","hashOfConfig":"19"},{"size":2821,"mtime":1622578217715,"results":"34","hashOfConfig":"19"},{"size":6307,"mtime":1622571792093,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"dg2gsn",{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\index.js",[],["79","80"],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\App.js",["81","82","83"],"import React from \"react\";\nimport \"./App.css\";\nimport RegistrationForm from \"./Components/LoginForm/RegistrationForm\";\nimport SignInForm from \"./Components/LoginForm/SignInForm\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\nimport { UsernameContext } from \"./Utils/UsernameContext/UsernameContext\";\nimport Landing from \"./Components/Landing/Landing\";\nimport CreatePost from \"./Components/Create/CreatePost/CreatePost\";\nimport Settings from \"./Components/Settings/Settings\";\nimport Public from \"./Components/Public/Public\";\nimport Profile from \"./Components/Public/Profile/Profile\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n\nimport { faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport Sidenav from \"./Components/Sidenav/Sidenav\";\n\nlibrary.add(faAngleUp);\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: { username: String, isLoggedIn: \"\" },\n      setProfile: this.setProfile,\n    };\n  }\n\n  setProfile = (profile) => {\n    this.setState({ profile });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <UsernameContext.Provider value={this.state}>\n          <Switch>\n            <Route path=\"/\" exact component={Landing} />\n            <Route path=\"/register\" exact component={RegistrationForm} />\n            <Route path=\"/signIn\" exact component={SignInForm} />\n            <Route path=\"/about\" exact component={Landing} />\n            <Route path=\"/Dashboard\" exact component={Dashboard} />\n            <Route path=\"/CreatePost\" exact component={CreatePost} />\n            <Route path=\"/Settings\" exact component={Settings} />\n            {/* <Route path=\"/Profile\" exact component={Profile} /> */}\n          </Switch>\n        </UsernameContext.Provider>\n      </div>\n    );\n  }\n}\n","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Landing\\Landing.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Utils\\UsernameContext\\UsernameContext.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\SignInForm.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\RegistrationForm.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Dashboard\\Dashboard.js",["84","85","86","87","88","89","90"],"import { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\r\nimport { UsernameContext } from \"../../Utils/UsernameContext/UsernameContext\";\r\nimport NewPost from \"./NewPost/NewPost\";\r\nimport Feed from \"../Public/Feed\";\r\nimport Avatar from \"react-avatar\";\r\nimport \"./Dashboard.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Redirect, useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  faMeteor,\r\n  faHome,\r\n  faHashtag,\r\n  faBell,\r\n  faEnvelope,\r\n  faBookmark,\r\n  faStream,\r\n  faUserAlt,\r\n  faEllipsisH,\r\n  faAngleUp,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n// import Sidenav from \"../Sidenav/Sidenav\";\r\nimport Profile from \"../Public/Profile/Profile\";\r\n\r\nexport default function Dashboard() {\r\n  const userContext = useContext(UsernameContext);\r\n  const profileUsername = userContext.profile.usernameContext;\r\n  const [navComp, setNavComp] = useState(<Feed />);\r\n\r\n  const toFeed = () => {\r\n    setNavComp(<Feed />);\r\n  };\r\n\r\n  const toProfile = () => {\r\n    setNavComp(<Profile />);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Container className=\"sideNavCont\">\r\n        <Row>\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"heroIcon\"\r\n                    icon={faAngleUp}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Link>\r\n                <Col\r\n                  className=\"testLine\"\r\n                  onClick={() => {\r\n                    toFeed();\r\n                  }}\r\n                >\r\n                  <Col xs={3} className=\"navIconCont\">\r\n                    <FontAwesomeIcon\r\n                      className=\"faIcon\"\r\n                      icon={faHome}\r\n                      color=\"white\"\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"auto\" className=\"testLineText\">\r\n                    <span className=\"navTagItem\">Home</span>\r\n                  </Col>\r\n                </Col>\r\n              </Link>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faHashtag}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">Explore</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faBell}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">Notifications</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                {\" \"}\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faEnvelope}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">Messages</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faBookmark}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">Bookmarks</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faStream}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">Lists</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Link>\r\n                <Col\r\n                  className=\"testLine\"\r\n                  onClick={() => {\r\n                    toProfile();\r\n                  }}\r\n                >\r\n                  <Col xs={3} className=\"navIconCont\">\r\n                    <FontAwesomeIcon\r\n                      className=\"faIcon\"\r\n                      icon={faUserAlt}\r\n                      color=\"white\"\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"auto\" className=\"testLineText\">\r\n                    <span className=\"navTagItem\">Profile</span>\r\n                  </Col>\r\n                </Col>\r\n              </Link>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faEllipsisH}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">More</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row>\r\n              <Col>\r\n                <Button id=\"postButton\" size=\"lg\" block>\r\n                  Post\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <Container className=\"sidenavContainer\">\r\n            <Row id=\"UserNameDisplay\">\r\n              <Col className=\"userInfoCont\">\r\n                <Col md=\"auto\" className=\"avatarCont\">\r\n                  <Avatar\r\n                    name={profileUsername}\r\n                    className=\"avatarIcon\"\r\n                    size=\"50px\"\r\n                  />\r\n                </Col>\r\n                <Col className=\"usernameCont\">\r\n                  <h3 id=\"displayNavUsername\">\r\n                    {profileUsername ? <p>@{profileUsername}</p> : \"\"}\r\n                  </h3>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Row>\r\n      </Container>\r\n      <Row>\r\n        <Col xs={3}></Col>\r\n        <Col>\r\n          {/*   I NEED A SWITCH HERE SO I CAN RENDER DIFFERENT COMPONENTS */}\r\n          {navComp}\r\n          {/* <Feed /> */}\r\n          {/* <Profile /> */}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\n//auth0 React Authentication\r\n","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Create\\CreatePost\\CreatePost.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Settings\\Settings.js",["91","92","93","94","95","96","97"],"import axios from \"axios\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Container,\r\n  InputGroup,\r\n  InputGroupProps,\r\n  FormControlProps,\r\n  FormControl,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { UsernameContext } from \"../../Utils/UsernameContext/UsernameContext\";\r\n\r\nexport default function Settings() {\r\n  const userContext = useContext(UsernameContext);\r\n  console.log(userContext);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [newPassword1, setNewPassword1] = useState(\"\");\r\n  const [newPassword2, setNewPassword2] = useState(\"\");\r\n  const profileUsername = userContext.profile.usernameContext;\r\n  const profileID = userContext.profile._id;\r\n\r\n  const changeUsername = () => {\r\n    // console.log(\"username\", username);\r\n    // console.log(\"new Password1\", newPassword1);\r\n    // console.log(\"new Password2\", newPassword2);\r\n  };\r\n\r\n  const handleChange = () => {\r\n    console.log(username);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // axios.put(`/api/user/${profileID}`, {});\r\n    // need to find a way to stop triggering this on key press.\r\n    console.log(userContext);\r\n    console.log(profileID);\r\n    console.log(\"submit clicked!\");\r\n    console.log(\"username\", username);\r\n    console.log(\"newPassword1\", newPassword1);\r\n    console.log(\"newPassword2\", newPassword2);\r\n    if (newPassword1 === newPassword2) {\r\n      console.log(\"passwords match!\");\r\n    } else {\r\n      console.log(\"Passwords do not match. try again!!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Form noValidate>\r\n        {/* <Form onSubmit={handleSubmit()} noValidate> */}\r\n        <InputGroup className=\"ms-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Change username:</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            className=\"userInput\"\r\n            placeholder={profileUsername}\r\n            aria-label=\"Username\"\r\n            name=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            type=\"text\"\r\n            noValidate\r\n          />\r\n        </InputGroup>\r\n        <InputGroup className=\"ms-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Change password:</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            className=\"userInput\"\r\n            placeholder=\"Enter new password.\"\r\n            aria-label=\"New password1\"\r\n            name=\"new password1\"\r\n            value={newPassword1}\r\n            onChange={(e) => setNewPassword1(e.target.value)}\r\n            type=\"text\"\r\n            noValidate\r\n          />\r\n          <FormControl\r\n            className=\"userInput\"\r\n            placeholder=\"Retype new password.\"\r\n            aria-label=\"New password2\"\r\n            name=\"new password2\"\r\n            value={newPassword2}\r\n            onChange={(e) => setNewPassword2(e.target.value)}\r\n            type=\"text\"\r\n            noValidate\r\n          />\r\n        </InputGroup>\r\n      </Form>\r\n      <Button type=\"submit\" onClick={(e) => handleSubmit(e)}>\r\n        Submit\r\n      </Button>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Dashboard\\NewPost\\NewPost.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Public.js",["98","99"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { UsernameContext } from \"../../Utils/UsernameContext/UsernameContext\";\r\nimport { Button, Row, Col, Container } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Public() {\r\n  const userContext = useContext(UsernameContext);\r\n  const profileUsername = userContext.profile.usernameContext;\r\n\r\n  const [foundUser, setFoundUser] = useState(\"\");\r\n  const [foundUserPosts, setFoundUserPosts] = useState(\"\");\r\n\r\n  const getWindowLocation = () => {\r\n    axios.get(`/api/public${window.location.pathname}`).then((res) => {\r\n      console.log(res.data[0]);\r\n      setFoundUser(res.data[0].username);\r\n      setFoundUserPosts(res.data[0].posts);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWindowLocation();\r\n  }, [foundUser]);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h1>{foundUser}</h1>\r\n          <Button\r\n            onClick={() => {\r\n              console.log(\"finding user\");\r\n              getWindowLocation();\r\n            }}\r\n            placeholder=\"button that does something\"\r\n          >\r\n            this is a BUTTON\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Feed.js",["100","101"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { UsernameContext } from \"../../Utils/UsernameContext/UsernameContext\";\r\nimport \"./Feed.css\";\r\nimport {\r\n  faRetweet,\r\n  faShare,\r\n  faEllipsisH,\r\n  faMeteor,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faComment, faHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Avatar from \"react-avatar\";\r\nimport NewPost from \"../Dashboard/NewPost/NewPost\";\r\n\r\nexport default function Feed() {\r\n  const usernameContext = useContext(UsernameContext);\r\n  const profileID = usernameContext.profile._id;\r\n  const userStatus = usernameContext.profile.isLoggedInContext;\r\n\r\n  const [feed, setFeed] = useState([]);\r\n  const [userId, setUserId] = useState();\r\n  const [feedUsername, setFeedUsername] = useState();\r\n\r\n  // \"profileID\" doesn't doesn't already have a profileID on first render.\r\n\r\n  const getFeedData = () => {\r\n    // console.log(\"usernameContext:\", usernameContext);\r\n    if (profileID === undefined) {\r\n      return console.log(\"loading...................\");\r\n    } else {\r\n      axios\r\n        .get(`/api/user/${profileID}`)\r\n        .then((res) => {\r\n          console.log(\"res.data.posts\", res.data.posts);\r\n          setUserId(res.data._id);\r\n          setFeed(res.data.posts);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFeedData();\r\n  }, [profileID]);\r\n\r\n  const usernameClick = () => {\r\n    console.log(\"Username clicked\");\r\n    console.log(\"feedUsername\", feedUsername);\r\n    axios\r\n      .get(`/api/user/${feedUsername}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"feedMain\">\r\n      <Col id=\"contentContainer\">\r\n        <Row>\r\n          <Container>\r\n            <Col id=\"category\">\r\n              Latest\r\n              <Button className=\"latestSortIcon\" variant=\"outline-dark, dark\">\r\n                <FontAwesomeIcon\r\n                  icon={faMeteor}\r\n                  id=\"latestSortBtn\"\r\n                  onClick={() => {\r\n                    console.log(\"Meteor clicked.\");\r\n                  }}\r\n                />\r\n              </Button>\r\n            </Col>\r\n          </Container>\r\n        </Row>\r\n        <Container id=\"postCards\">\r\n          <Row>\r\n            <NewPost />\r\n            <Col className=\"divider\" />\r\n          </Row>\r\n        </Container>\r\n      </Col>\r\n\r\n      <Container className=\"statusFeedContainer\">\r\n        <ListGroup>\r\n          {userStatus\r\n            ? feed.reverse().map((feed) => (\r\n                <ListGroupItem key={feed} className=\"feedText\">\r\n                  <Container id=\"statusContainer\">\r\n                    <Row>\r\n                      <Col md=\"auto\" className=\"avaCont\">\r\n                        <Avatar\r\n                          className=\"feedAva\"\r\n                          name={feed.author}\r\n                          size=\"50px\"\r\n                        />\r\n                        {/* need image here */}\r\n                      </Col>\r\n                      <Col id=\"feedUserCont\">\r\n                        <Col id=\"feedUserIconBtnCont\">\r\n                          <Col id=\"usernameFeedCont\">\r\n                            <h6\r\n                              className=\"usernameFeed\"\r\n                              onMouseEnter={() => {\r\n                                setFeedUsername(feed.postAuthor_id);\r\n                              }}\r\n                              onMouseLeave={() => {\r\n                                setFeedUsername(\"\");\r\n                              }}\r\n                              onClick={() => {\r\n                                setFeedUsername(feed.postAuthor_id);\r\n                                usernameClick();\r\n                              }}\r\n                              value={feed.postAuthor_id}\r\n                            >\r\n                              @{feed.author}\r\n                            </h6>\r\n                          </Col>\r\n                          <Col md=\"auto\" id=\"optionsBtnCont\">\r\n                            <Button\r\n                              id=\"feedMoreIC\"\r\n                              onClick={() => {\r\n                                console.log(\"options clicked.\");\r\n                              }}\r\n                            >\r\n                              <FontAwesomeIcon icon={faEllipsisH} />\r\n                            </Button>\r\n                          </Col>\r\n                        </Col>\r\n                        <Col id=\"feedStatus\">\r\n                          <p>{feed.post}</p>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Container>\r\n                      <Row className=\"userIntBtns\">\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faComment}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faRetweet}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faHeart}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faShare}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                      </Row>\r\n                    </Container>\r\n                  </Container>\r\n                </ListGroupItem>\r\n              ))\r\n            : \"loading\"}\r\n        </ListGroup>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Footer\\Footer.js",[],["102","103"],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Footer\\Search.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Sidenav\\Sidenav.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Profile\\Profile.js",["104","105"],"import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button, Image } from \"react-bootstrap\";\r\nimport \"./Profile.css\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ProfileFeed from \"../Profile/ProfileFeed/ProfileFeed\";\r\n\r\nexport default function Profile() {\r\n  const [profileTab, setProfileTab] = useState(<ProfileFeed />);\r\n\r\n  const profileToFeed = () => {\r\n    setProfileTab(<ProfileFeed />);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"profileCont\">\r\n      <Container className=\"prfNameCont\">\r\n        <Row>\r\n          <Col xs=\"auto\" className=\"backArrow\">\r\n            <FontAwesomeIcon\r\n              icon={faArrowLeft}\r\n              className=\"backArrow\"\r\n              color=\"white\"\r\n            />\r\n          </Col>\r\n          <Col className=\"prfUsername\">\r\n            <p className=\"prfUsername\">Username</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container className=\"prfHeroImageCont\">\r\n        <Row>\r\n          <Col className=\"imgPlaceholderCont\" />\r\n        </Row>\r\n      </Container>\r\n      <Container className=\"prfPicCont\">\r\n        <Row>\r\n          <Col xs=\"auto\" className=\"prfImgPlc\" />\r\n          <Col>\r\n            <Button id=\"editPrfBtn\" variant=\"outline-primary\">\r\n              Edit profile\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container className=\"prfUsrInfoCont\">\r\n        <Row className=\"prfUsernameCont\">\r\n          <Col className=\"prfUsername\">Username</Col>\r\n          <Col className=\"prfAtUsername\">@username</Col>\r\n        </Row>\r\n        <Row className=\"prfBioCont\">\r\n          <Col className=\"prfBio\">\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque\r\n            tincidunt nisl et metus mattis porttitor. Nulla nec bibendum magna.\r\n            Praesent sagittis placerat.\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>joined?</Col>\r\n        </Row>\r\n        <Row className=\"presenceCont\">\r\n          <Col className=\"followCount\">\r\n            <Col className=\"followNum\">256</Col>\r\n            <Col className=\"presenceText\">Following</Col>\r\n          </Col>\r\n          <Col className=\"followCount\">\r\n            <Col className=\"followingNum\">225</Col>\r\n            <Col className=\"presenceText\">Followers</Col>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container>\r\n        <Row className=\"profileNavBtns\">\r\n          <Col className=\"profileNavBtn\">Tweets</Col>\r\n          <Col className=\"profileNavBtn\">Tweets and replies</Col>\r\n          <Col className=\"profileNavBtn\">Media</Col>\r\n          <Col className=\"profileNavBtn\">Likes</Col>\r\n        </Row>\r\n      </Container>\r\n      <Row>{profileTab}</Row>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Profile\\ProfileFeed\\ProfileFeed.js",["106","107"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { UsernameContext } from \"../../../../Utils/UsernameContext/UsernameContext\";\r\nimport \"./ProfileFeed.css\";\r\nimport {\r\n  faRetweet,\r\n  faShare,\r\n  faEllipsisH,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faComment, faHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Avatar from \"react-avatar\";\r\n\r\nexport default function ProfileFeed() {\r\n  const usernameContext = useContext(UsernameContext);\r\n  const profileID = usernameContext.profile._id;\r\n  const userStatus = usernameContext.profile.isLoggedInContext;\r\n\r\n  const [feed, setFeed] = useState([]);\r\n  const [userId, setUserId] = useState();\r\n  const [feedUsername, setFeedUsername] = useState();\r\n\r\n  // \"profileID\" doesn't doesn't already have a profileID on first render.\r\n\r\n  const getFeedData = () => {\r\n    // console.log(\"usernameContext:\", usernameContext);\r\n    if (profileID === undefined) {\r\n      return console.log(\"loading...................\");\r\n    } else {\r\n      axios\r\n        .get(`/api/user/${profileID}`)\r\n        .then((res) => {\r\n          console.log(\"res.data.posts\", res.data.posts);\r\n          setUserId(res.data._id);\r\n          setFeed(res.data.posts);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFeedData();\r\n  }, [profileID]);\r\n\r\n  const usernameClick = () => {\r\n    console.log(\"Username clicked\");\r\n    console.log(\"feedUsername\", feedUsername);\r\n    axios\r\n      .get(`/api/user/${feedUsername}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"feedMain\">\r\n      <Container>\r\n        <ListGroup>\r\n          {userStatus\r\n            ? feed.reverse().map((feed) => (\r\n                <ListGroupItem key={feed} className=\"feedText\">\r\n                  <Container id=\"statusContainer\">\r\n                    <Row>\r\n                      <Col md=\"auto\" className=\"avaCont\">\r\n                        <Avatar\r\n                          className=\"feedAva\"\r\n                          name={feed.author}\r\n                          size=\"50px\"\r\n                        />\r\n                        {/* need image here */}\r\n                      </Col>\r\n                      <Col id=\"feedUserCont\">\r\n                        <Col id=\"feedUserIconBtnCont\">\r\n                          <Col id=\"usernameFeedCont\">\r\n                            <h6\r\n                              className=\"usernameFeed\"\r\n                              onMouseEnter={() => {\r\n                                setFeedUsername(feed.postAuthor_id);\r\n                              }}\r\n                              onMouseLeave={() => {\r\n                                setFeedUsername(\"\");\r\n                              }}\r\n                              onClick={() => {\r\n                                setFeedUsername(feed.postAuthor_id);\r\n                                usernameClick();\r\n                              }}\r\n                              value={feed.postAuthor_id}\r\n                            >\r\n                              @{feed.author}\r\n                            </h6>\r\n                          </Col>\r\n                          <Col md=\"auto\" id=\"optionsBtnCont\">\r\n                            <Button\r\n                              id=\"feedMoreIC\"\r\n                              onClick={() => {\r\n                                console.log(\"options clicked.\");\r\n                              }}\r\n                            >\r\n                              <FontAwesomeIcon icon={faEllipsisH} />\r\n                            </Button>\r\n                          </Col>\r\n                        </Col>\r\n                        <Col id=\"feedStatus\">\r\n                          <p>{feed.post}</p>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Container>\r\n                      <Row className=\"userIntBtns\">\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faComment}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faRetweet}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faHeart}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faShare}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                      </Row>\r\n                    </Container>\r\n                  </Container>\r\n                </ListGroupItem>\r\n              ))\r\n            : \"loading\"}\r\n        </ListGroup>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":11,"column":8,"nodeType":"114","messageId":"115","endLine":11,"endColumn":14},{"ruleId":"112","severity":1,"message":"116","line":12,"column":8,"nodeType":"114","messageId":"115","endLine":12,"endColumn":15},{"ruleId":"112","severity":1,"message":"117","line":16,"column":8,"nodeType":"114","messageId":"115","endLine":16,"endColumn":15},{"ruleId":"112","severity":1,"message":"118","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":16},{"ruleId":"112","severity":1,"message":"119","line":3,"column":18,"nodeType":"114","messageId":"115","endLine":3,"endColumn":23},{"ruleId":"112","severity":1,"message":"120","line":3,"column":25,"nodeType":"114","messageId":"115","endLine":3,"endColumn":38},{"ruleId":"112","severity":1,"message":"121","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":15},{"ruleId":"112","severity":1,"message":"122","line":10,"column":10,"nodeType":"114","messageId":"115","endLine":10,"endColumn":18},{"ruleId":"112","severity":1,"message":"123","line":10,"column":20,"nodeType":"114","messageId":"115","endLine":10,"endColumn":30},{"ruleId":"112","severity":1,"message":"124","line":12,"column":3,"nodeType":"114","messageId":"115","endLine":12,"endColumn":11},{"ruleId":"112","severity":1,"message":"125","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":13},{"ruleId":"112","severity":1,"message":"126","line":4,"column":3,"nodeType":"114","messageId":"115","endLine":4,"endColumn":6},{"ruleId":"112","severity":1,"message":"127","line":5,"column":3,"nodeType":"114","messageId":"115","endLine":5,"endColumn":6},{"ruleId":"112","severity":1,"message":"128","line":8,"column":3,"nodeType":"114","messageId":"115","endLine":8,"endColumn":18},{"ruleId":"112","severity":1,"message":"129","line":9,"column":3,"nodeType":"114","messageId":"115","endLine":9,"endColumn":19},{"ruleId":"112","severity":1,"message":"130","line":25,"column":9,"nodeType":"114","messageId":"115","endLine":25,"endColumn":23},{"ruleId":"112","severity":1,"message":"131","line":31,"column":9,"nodeType":"114","messageId":"115","endLine":31,"endColumn":21},{"ruleId":"112","severity":1,"message":"132","line":8,"column":9,"nodeType":"114","messageId":"115","endLine":8,"endColumn":24},{"ruleId":"112","severity":1,"message":"133","line":11,"column":10,"nodeType":"114","messageId":"115","endLine":11,"endColumn":24},{"ruleId":"112","severity":1,"message":"134","line":30,"column":10,"nodeType":"114","messageId":"115","endLine":30,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":55,"column":6,"nodeType":"137","endLine":55,"endColumn":17,"suggestions":"138"},{"ruleId":"108","replacedBy":"139"},{"ruleId":"110","replacedBy":"140"},{"ruleId":"112","severity":1,"message":"141","line":2,"column":39,"nodeType":"114","messageId":"115","endLine":2,"endColumn":44},{"ruleId":"112","severity":1,"message":"142","line":11,"column":9,"nodeType":"114","messageId":"115","endLine":11,"endColumn":22},{"ruleId":"112","severity":1,"message":"134","line":28,"column":10,"nodeType":"114","messageId":"115","endLine":28,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":53,"column":6,"nodeType":"137","endLine":53,"endColumn":17,"suggestions":"143"},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'Public' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","'Sidenav' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useRouteMatch' is defined but never used.","'NewPost' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'faMeteor' is defined but never used.","'axios' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'InputGroupProps' is defined but never used.","'FormControlProps' is defined but never used.","'changeUsername' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'profileUsername' is assigned a value but never used.","'foundUserPosts' is assigned a value but never used.","'userId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFeedData'. Either include it or remove the dependency array.","ArrayExpression",["146"],["144"],["145"],"'Image' is defined but never used.","'profileToFeed' is assigned a value but never used.",["147"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"148","fix":"150"},"Update the dependencies array to be: [getFeedData, profileID]",{"range":"151","text":"152"},{"range":"153","text":"152"},[1621,1632],"[getFeedData, profileID]",[1575,1586]]