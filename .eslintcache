[{"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\index.js":"1","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\App.js":"2","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Landing\\Landing.js":"3","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Utils\\UsernameContext\\UsernameContext.js":"4","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\SignInForm.js":"5","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\RegistrationForm.js":"6","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Dashboard\\Dashboard.js":"7","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Create\\CreatePost\\CreatePost.js":"8","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Settings\\Settings.js":"9","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Navbar\\Navigation.js":"10","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Navbar\\Search.js":"11","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Dashboard\\NewPost\\NewPost.js":"12","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Public.js":"13","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Feed.js":"14"},{"size":477,"mtime":1608683214224,"results":"15","hashOfConfig":"16"},{"size":1704,"mtime":1614193624421,"results":"17","hashOfConfig":"16"},{"size":1372,"mtime":1609791378323,"results":"18","hashOfConfig":"16"},{"size":139,"mtime":1608769579655,"results":"19","hashOfConfig":"16"},{"size":6408,"mtime":1614107521298,"results":"20","hashOfConfig":"16"},{"size":5593,"mtime":1612984708871,"results":"21","hashOfConfig":"16"},{"size":854,"mtime":1613506516211,"results":"22","hashOfConfig":"16"},{"size":660,"mtime":1610654151699,"results":"23","hashOfConfig":"16"},{"size":3150,"mtime":1612991252321,"results":"24","hashOfConfig":"16"},{"size":1896,"mtime":1613500734751,"results":"25","hashOfConfig":"16"},{"size":2569,"mtime":1613429208433,"results":"26","hashOfConfig":"16"},{"size":2206,"mtime":1614194308798,"results":"27","hashOfConfig":"16"},{"size":1085,"mtime":1614204628198,"results":"28","hashOfConfig":"16"},{"size":2989,"mtime":1614113361805,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"dg2gsn",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\index.js",[],["61","62"],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\App.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Landing\\Landing.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Utils\\UsernameContext\\UsernameContext.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\SignInForm.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\RegistrationForm.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Dashboard\\Dashboard.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Create\\CreatePost\\CreatePost.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Settings\\Settings.js",["63","64","65","66","67","68","69"],"import axios from \"axios\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Container,\r\n  InputGroup,\r\n  InputGroupProps,\r\n  FormControlProps,\r\n  FormControl,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { UsernameContext } from \"../../Utils/UsernameContext/UsernameContext\";\r\n\r\nexport default function Settings() {\r\n  const userContext = useContext(UsernameContext);\r\n  console.log(userContext);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [newPassword1, setNewPassword1] = useState(\"\");\r\n  const [newPassword2, setNewPassword2] = useState(\"\");\r\n  const profileUsername = userContext.profile.usernameContext;\r\n  const profileID = userContext.profile._id;\r\n\r\n  const changeUsername = () => {\r\n    // console.log(\"username\", username);\r\n    // console.log(\"new Password1\", newPassword1);\r\n    // console.log(\"new Password2\", newPassword2);\r\n  };\r\n\r\n  const handleChange = () => {\r\n    console.log(username);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // axios.put(`/api/user/${profileID}`, {});\r\n    // need to find a way to stop triggering this on key press.\r\n    console.log(userContext);\r\n    console.log(profileID);\r\n    console.log(\"submit clicked!\");\r\n    console.log(\"username\", username);\r\n    console.log(\"newPassword1\", newPassword1);\r\n    console.log(\"newPassword2\", newPassword2);\r\n    if (newPassword1 === newPassword2) {\r\n      console.log(\"passwords match!\");\r\n    } else {\r\n      console.log(\"Passwords do not match. try again!!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Form noValidate>\r\n        {/* <Form onSubmit={handleSubmit()} noValidate> */}\r\n        <InputGroup className=\"ms-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Change username:</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            className=\"userInput\"\r\n            placeholder={profileUsername}\r\n            aria-label=\"Username\"\r\n            name=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            type=\"text\"\r\n            noValidate\r\n          />\r\n        </InputGroup>\r\n        <InputGroup className=\"ms-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Change password:</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            className=\"userInput\"\r\n            placeholder=\"Enter new password.\"\r\n            aria-label=\"New password1\"\r\n            name=\"new password1\"\r\n            value={newPassword1}\r\n            onChange={(e) => setNewPassword1(e.target.value)}\r\n            type=\"text\"\r\n            noValidate\r\n          />\r\n          <FormControl\r\n            className=\"userInput\"\r\n            placeholder=\"Retype new password.\"\r\n            aria-label=\"New password2\"\r\n            name=\"new password2\"\r\n            value={newPassword2}\r\n            onChange={(e) => setNewPassword2(e.target.value)}\r\n            type=\"text\"\r\n            noValidate\r\n          />\r\n        </InputGroup>\r\n      </Form>\r\n      <Button type=\"submit\" onClick={(e) => handleSubmit(e)}>\r\n        Submit\r\n      </Button>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Navbar\\Navigation.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Navbar\\Search.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Dashboard\\NewPost\\NewPost.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Public.js",["70","71"],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Feed.js",["72","73"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Row, Col, Container, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { UsernameContext } from \"../../Utils/UsernameContext/UsernameContext\";\r\n\r\nexport default function Feed() {\r\n  const usernameContext = useContext(UsernameContext);\r\n  const profileID = usernameContext.profile._id;\r\n  const userStatus = usernameContext.profile.isLoggedInContext;\r\n\r\n  const [feed, setFeed] = useState([]);\r\n  const [userId, setUserId] = useState();\r\n  const [feedUsername, setFeedUsername] = useState();\r\n\r\n  // \"profileID\" doesn't doesn't already have a profileID on first render.\r\n\r\n  const getFeedData = () => {\r\n    // console.log(\"usernameContext:\", usernameContext);\r\n    if (profileID === undefined) {\r\n      return console.log(\"loading...................\");\r\n    } else {\r\n      axios\r\n        .get(`/api/user/${profileID}`)\r\n        .then((res) => {\r\n          console.log(\"res.data.posts\", res.data.posts);\r\n          setUserId(res.data._id);\r\n          setFeed(res.data.posts);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFeedData();\r\n  }, [profileID]);\r\n\r\n  const usernameClick = () => {\r\n    console.log(\"Username clicked\");\r\n    console.log(\"feedUsername\", feedUsername);\r\n    axios\r\n      .get(`/api/user/${feedUsername}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <ListGroup>\r\n          {userStatus\r\n            ? feed.map((feed) => (\r\n                <ListGroupItem>\r\n                  <Row>\r\n                    <Col>\r\n                      <h6\r\n                        onMouseEnter={() => {\r\n                          setFeedUsername(feed.postAuthor_id);\r\n                        }}\r\n                        onMouseLeave={() => {\r\n                          setFeedUsername(\"\");\r\n                        }}\r\n                        onClick={() => {\r\n                          setFeedUsername(feed.postAuthor_id);\r\n                          console.log(feed.author);\r\n                          usernameClick();\r\n                        }}\r\n                        value={feed.postAuthor_id}\r\n                      >\r\n                        {feed.author}\r\n                      </h6>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <h5>{feed.post}</h5>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col></Col>\r\n                    <Col>ST</Col>\r\n                    <Col>RT</Col>\r\n                    <Col>LK</Col>\r\n                    <Col></Col>\r\n                  </Row>\r\n                </ListGroupItem>\r\n              ))\r\n            : \"loading\"}\r\n        </ListGroup>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":13},{"ruleId":"78","severity":1,"message":"82","line":4,"column":3,"nodeType":"80","messageId":"81","endLine":4,"endColumn":6},{"ruleId":"78","severity":1,"message":"83","line":5,"column":3,"nodeType":"80","messageId":"81","endLine":5,"endColumn":6},{"ruleId":"78","severity":1,"message":"84","line":8,"column":3,"nodeType":"80","messageId":"81","endLine":8,"endColumn":18},{"ruleId":"78","severity":1,"message":"85","line":9,"column":3,"nodeType":"80","messageId":"81","endLine":9,"endColumn":19},{"ruleId":"78","severity":1,"message":"86","line":25,"column":9,"nodeType":"80","messageId":"81","endLine":25,"endColumn":23},{"ruleId":"78","severity":1,"message":"87","line":31,"column":9,"nodeType":"80","messageId":"81","endLine":31,"endColumn":21},{"ruleId":"78","severity":1,"message":"88","line":8,"column":9,"nodeType":"80","messageId":"81","endLine":8,"endColumn":24},{"ruleId":"78","severity":1,"message":"89","line":11,"column":10,"nodeType":"80","messageId":"81","endLine":11,"endColumn":24},{"ruleId":"78","severity":1,"message":"90","line":12,"column":10,"nodeType":"80","messageId":"81","endLine":12,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":37,"column":6,"nodeType":"93","endLine":37,"endColumn":17,"suggestions":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Row' is defined but never used.","'InputGroupProps' is defined but never used.","'FormControlProps' is defined but never used.","'changeUsername' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'profileUsername' is assigned a value but never used.","'foundUserPosts' is assigned a value but never used.","'userId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFeedData'. Either include it or remove the dependency array.","ArrayExpression",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [getFeedData, profileID]",{"range":"100","text":"101"},[1230,1241],"[getFeedData, profileID]"]