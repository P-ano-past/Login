[{"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\index.js":"1","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\App.js":"2","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Landing\\Landing.js":"3","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Utils\\UsernameContext\\UsernameContext.js":"4","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\SignInForm.js":"5","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\RegistrationForm.js":"6","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Dashboard\\Dashboard.js":"7","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Create\\CreatePost\\CreatePost.js":"8","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Settings\\Settings.js":"9","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Dashboard\\NewPost\\NewPost.js":"10","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Public.js":"11","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Feed.js":"12","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Footer\\Footer.js":"13","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Footer\\Search.js":"14","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Sidenav\\Sidenav.js":"15","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Profile\\Profile.js":"16","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Profile\\ProfileFeed\\ProfileFeed.js":"17","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\LoginBtn\\Auth0Login.js":"18","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\LogoutBtn\\Auth0LogoutBtn.js":"19","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\LogoutBtn\\Auth0Profile.js":"20","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\AuthenticationButton.js":"21"},{"size":757,"mtime":1634242834857,"results":"22","hashOfConfig":"23"},{"size":1742,"mtime":1635446273326,"results":"24","hashOfConfig":"23"},{"size":9657,"mtime":1634679806624,"results":"25","hashOfConfig":"23"},{"size":139,"mtime":1608769579655,"results":"26","hashOfConfig":"23"},{"size":6457,"mtime":1635443462801,"results":"27","hashOfConfig":"23"},{"size":5217,"mtime":1619545437382,"results":"28","hashOfConfig":"23"},{"size":9564,"mtime":1635450743010,"results":"29","hashOfConfig":"23"},{"size":660,"mtime":1610654151699,"results":"30","hashOfConfig":"23"},{"size":2464,"mtime":1625680647442,"results":"31","hashOfConfig":"23"},{"size":2123,"mtime":1635449861405,"results":"32","hashOfConfig":"23"},{"size":1233,"mtime":1620152608004,"results":"33","hashOfConfig":"34"},{"size":7067,"mtime":1635457630910,"results":"35","hashOfConfig":"23"},{"size":392,"mtime":1620070421198,"results":"36","hashOfConfig":"23"},{"size":2569,"mtime":1613429208433,"results":"37","hashOfConfig":"34"},{"size":7186,"mtime":1621452515370,"results":"38","hashOfConfig":"34"},{"size":6408,"mtime":1625598206148,"results":"39","hashOfConfig":"23"},{"size":6307,"mtime":1622571792093,"results":"40","hashOfConfig":"23"},{"size":423,"mtime":1629500233024,"results":"41","hashOfConfig":"23"},{"size":330,"mtime":1635361004718,"results":"42","hashOfConfig":"23"},{"size":746,"mtime":1634945548324,"results":"43","hashOfConfig":"23"},{"size":1581,"mtime":1635446922124,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x518k6",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"dg2gsn",{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\index.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\App.js",["96"],"import React from \"react\";\nimport \"./App.css\";\nimport RegistrationForm from \"./Components/LoginForm/RegistrationForm\";\nimport SignInForm from \"./Components/LoginForm/SignInForm\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\nimport { UsernameContext } from \"./Utils/UsernameContext/UsernameContext\";\nimport Landing from \"./Components/Landing/Landing\";\nimport CreatePost from \"./Components/Create/CreatePost/CreatePost\";\nimport Settings from \"./Components/Settings/Settings\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { withAuth0 } from \"@auth0/auth0-react\";\n\nlibrary.add(faAngleUp);\n\nexport default class App extends React.Component {\n  // this constructor modifes the context object.\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: { username: String, isLoggedIn: \"\" },\n      setProfile: this.setProfile,\n    };\n  }\n\n  setProfile = (profile) => {\n    this.setState({ profile });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <UsernameContext.Provider value={this.state}>\n          <Switch>\n            <Route path=\"/\" exact component={Landing} />\n            <Route path=\"/register\" exact component={RegistrationForm} />\n            <Route path=\"/signIn\" exact component={SignInForm} />\n            <Route path=\"/about\" exact component={Landing} />\n            <Route path=\"/Dashboard\" exact component={Dashboard}></Route>\n            <Route path=\"/CreatePost\" exact component={CreatePost} />\n            <Route path=\"/Settings\" exact component={Settings} />\n          </Switch>\n        </UsernameContext.Provider>\n      </div>\n    );\n  }\n}\n","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Landing\\Landing.js",["97"],"import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n  Form,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport ModalBody from \"react-bootstrap/ModalBody\";\r\nimport \"./Landing.css\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { UsernameContext } from \"../../Utils/UsernameContext/UsernameContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport RegistrationForm from \"../LoginForm/RegistrationForm\";\r\nimport LoginButton from \"../LoginForm/LoginBtn/Auth0Login\";\r\nimport LogoutButton from \"../LoginForm/LogoutBtn/Auth0LogoutBtn\";\r\nimport Auth0Profile from \"../LoginForm/LogoutBtn/Auth0Profile\";\r\nimport AuthenticationButton from \"../LoginForm/AuthenticationButton\";\r\n\r\nconst validateForm = (errors) => {\r\n  let valid = true;\r\n  Object.values(errors).forEach((val) => val.length > 0 && (valid = false));\r\n  return valid;\r\n};\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default class Landing extends Component {\r\n  static contextType = UsernameContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      errors: {\r\n        username: \"\",\r\n        userPassword: \"\",\r\n      },\r\n      isAuth: \"\",\r\n    };\r\n    this.showModal = this.showModal.bind(this);\r\n    this.hideModal = this.hideModal.bind(this);\r\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n  }\r\n\r\n  _initProfile() {\r\n    const context = this.context;\r\n    //modify the set profile to add information to the \"profile\" object for the usernameContext.\r\n    context.setProfile({\r\n      usernameContext: this.state.username,\r\n      isLoggedIn: true,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._initProfile();\r\n  }\r\n\r\n  handleUsernameChange(event) {\r\n    this.setState({\r\n      username: event.target.value,\r\n    });\r\n  }\r\n\r\n  handlePasswordChange(event) {\r\n    this.setState({\r\n      userPassword: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n\r\n    switch (name) {\r\n      case \"username\":\r\n        errors.username =\r\n          value.length < 3 || \"\"\r\n            ? \"Username must be at least 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"userPassword\":\r\n        errors.userPassword =\r\n          value.length < 3 || \"\"\r\n            ? \"Password must be at least 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({ show: true });\r\n  };\r\n  hideModal = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    // let history = useHistory();\r\n    console.log(history);\r\n    event.preventDefault();\r\n    if (validateForm(this.state.errors)) {\r\n      axios\r\n        .post(\"/api/user/login\", {\r\n          username: this.state.username.replace(/\\s+/g, \"\"),\r\n          userPassword: this.state.userPassword.replace(/\\s+/g, \"\"),\r\n        })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            const context = this.context;\r\n            history.push(\"/Dashboard\");\r\n\r\n            this.setState({\r\n              redirect: \"/Dashboard\",\r\n              isLoggedIn: true,\r\n              _id: res.data._id,\r\n            });\r\n\r\n            context.setProfile({\r\n              usernameContext: this.state.username,\r\n              isLoggedInContext: this.state.isLoggedIn,\r\n              _id: this.state._id,\r\n            });\r\n          }\r\n          if (res.status === 401) {\r\n            console.log(\"password is incorrect\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          console.log(\"err.response.data\", err.response.data);\r\n          console.log(\"err.response.status\", err.response.status);\r\n          console.log(\"err.response.headers\", err.response.headers);\r\n          if (err.response.status === 401) {\r\n            this.setState({ loginError: \"Invalid username or password.\" });\r\n          }\r\n        });\r\n    } else {\r\n      console.error(\"Invalid Form\");\r\n      this.handleShow();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />;\r\n    }\r\n\r\n    return (\r\n      <Container id=\"landingBg\">\r\n        <Row id=\"bgimagerow\">\r\n          <Col>\r\n            <Image\r\n              src=\"https://live.staticflickr.com/65535/50980086008_f443307bd5_k.jpg\"\r\n              width=\"1080\"\r\n              height=\"900\"\r\n              alt=\"magenta led panels\"\r\n              id=\"landingImg\"\r\n            />\r\n          </Col>\r\n\r\n          <Col xs={6} id=\"joinContainer\">\r\n            <Row className=\"loginContainer\">\r\n              <Col>\r\n                <LoginButton />\r\n                {/* <Form onSubmit={this.handleSubmit} noValidate>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                      className=\"userInput\"\r\n                      placeholder=\"Username\"\r\n                      aria-label=\"Username\"\r\n                      name=\"username\"\r\n                      value={this.state.username}\r\n                      onChange={this.handleChange}\r\n                      aria-describedby=\"basic-addon1\"\r\n                      type=\"text\"\r\n                      autoComplete=\"username\"\r\n                      noValidate\r\n                    />\r\n                    {errors.username.length > 0 && (\r\n                      <span className=\"error\">{errors.username}</span>\r\n                    )}\r\n                  </InputGroup>\r\n                </Form> */}\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                      className=\"userInput\"\r\n                      placeholder=\"Password\"\r\n                      aria-label=\"Password\"\r\n                      name=\"userPassword\"\r\n                      value={this.state.userPassword}\r\n                      onChange={this.handleChange}\r\n                      aria-describedby=\"basic-addon1\"\r\n                      type=\"password\"\r\n                      autoComplete=\"password\"\r\n                      noValidate\r\n                    />\r\n                    {errors.userPassword.length > 0 && (\r\n                      <span className=\"error\">{errors.userPassword}</span>\r\n                    )}\r\n\r\n                    <p value={this.state.loginError}>{this.state.loginError}</p>\r\n                  </InputGroup>\r\n                </Form>\r\n              </Col>\r\n\r\n              <Col>\r\n                <Button\r\n                  id=\"submitButton\"\r\n                  type=\"submit\"\r\n                  onClick={this.handleSubmit}\r\n                  variant=\"outline-primary\"\r\n                >\r\n                  Log in\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FontAwesomeIcon\r\n                  icon={faAngleUp}\r\n                  size=\"10x\"\r\n                  color=\"white\"\r\n                  id=\"heroLandingIcon\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p className=\"join\">\r\n                  <h1 id=\"happNow\">Happening now</h1>\r\n                  <h4 id=\"joinN\">Join nSpace today.</h4>\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <AuthenticationButton\r\n                  onClick={() => console.log(\"thisisclicked\")}\r\n                />\r\n                <Auth0Profile />\r\n                {/* <Button\r\n                  className=\"joinbtns\"\r\n                  id=\"signupbtn\"\r\n                  onClick={() => {\r\n                    console.log(\"signup clicked\");\r\n                    this.showModal();\r\n                  }}\r\n                  size=\"lg\"\r\n                  block\r\n                >\r\n                  Sign up\r\n                </Button> */}\r\n              </Col>\r\n              <Col>\r\n                <Modal\r\n                  show={this.state.show}\r\n                  handleClose={this.state.hideModal}\r\n                >\r\n                  <Container id=\"modalIconCont\" fluid>\r\n                    <Row className=\"modalRowTitle\">\r\n                      <Col>\r\n                        <FontAwesomeIcon\r\n                          icon={faAngleUp}\r\n                          size=\"10x\"\r\n                          color=\"white\"\r\n                          id=\"modalHeroIcon\"\r\n                        />\r\n                      </Col>\r\n                      <Col id=\"modalCloseBtn\">\r\n                        <Button\r\n                          id=\"btnModalStyle\"\r\n                          onClick={() => this.hideModal()}\r\n                        >\r\n                          x\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n\r\n                  <ModalBody className=\"regModal\">\r\n                    <RegistrationForm />\r\n                  </ModalBody>\r\n                </Modal>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <Footer />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// https://flic.kr/p/2kEWgs9 red led light panel wall\r\n","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Utils\\UsernameContext\\UsernameContext.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\SignInForm.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\RegistrationForm.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Dashboard\\Dashboard.js",["98","99","100","101","102","103","104"],"import { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { UsernameContext } from \"../../Utils/UsernameContext/UsernameContext\";\r\nimport Feed from \"../Public/Feed\";\r\nimport Avatar from \"react-avatar\";\r\nimport \"./Dashboard.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  faHome,\r\n  faHashtag,\r\n  faBell,\r\n  faEnvelope,\r\n  faBookmark,\r\n  faStream,\r\n  faUserAlt,\r\n  faEllipsisH,\r\n  faAngleUp,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Profile from \"../Public/Profile/Profile\";\r\nimport \"../../Components/Sidenav/Sidenav.css\";\r\nimport axios from \"axios\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport AuthenticationButton from \"../LoginForm/AuthenticationButton\";\r\n\r\nexport default function Dashboard() {\r\n  const userContext = useContext(UsernameContext);\r\n  const profileUsername = userContext.profile.username;\r\n  const existing = localStorage.getItem(\"userContextID\");\r\n  const [navComp, setNavComp] = useState(<Feed />);\r\n  const [LSID, setLSID] = useState(\"\");\r\n  const { user, isAuthenticated } = useAuth0();\r\n  const LoStGet = localStorage.getItem(\"userContextID\");\r\n  const LocalID = localStorage.getItem(\"user\");\r\n\r\n  console.log(\"usercontext\", userContext);\r\n  console.log(\"usercontext.profile\", userContext.profile);\r\n  console.log(\"profile Username\", profileUsername);\r\n\r\n  const checkLocalContext = () => {\r\n    setLSID(localStorage.getItem(\"userContextID\"));\r\n    // console.log(\"userContext\", userContext);\r\n    // console.log(\"window.performance\", window.performance);\r\n    if (window.performance.navigation.type === 0) {\r\n      console.log(\"window loaded. \");\r\n      localStorage.setItem(\"userContextID\", userContext.profile._id);\r\n    } else if (window.performance.navigation.type === 1) {\r\n      console.log(\"userContext refresh\", userContext);\r\n      setLSID(LoStGet);\r\n      axios.get(`/api/user/${LoStGet}`).then((res) => {\r\n        console.log(`res call from window refresh`, res.data);\r\n      });\r\n    }\r\n  };\r\n\r\n  const toFeed = () => {\r\n    setNavComp(<Feed />);\r\n  };\r\n\r\n  const toProfile = () => {\r\n    setNavComp(<Profile />);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Container className=\"sideNavCont\">\r\n        <Row>\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"heroIcon\"\r\n                    icon={faAngleUp}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Link>\r\n                <Col\r\n                  className=\"testLine\"\r\n                  onClick={() => {\r\n                    toFeed();\r\n                  }}\r\n                >\r\n                  <Col xs={3} className=\"navIconCont\">\r\n                    <FontAwesomeIcon\r\n                      className=\"faIcon\"\r\n                      icon={faHome}\r\n                      color=\"white\"\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"auto\" className=\"testLineText\">\r\n                    <span className=\"navTagItem\">Home</span>\r\n                  </Col>\r\n                </Col>\r\n              </Link>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faHashtag}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">Explore</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faBell}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">Notifications</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                {\" \"}\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faEnvelope}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">Messages</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faBookmark}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">Bookmarks</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faStream}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">Lists</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Link>\r\n                <Col\r\n                  className=\"testLine\"\r\n                  onClick={() => {\r\n                    toProfile();\r\n                  }}\r\n                >\r\n                  <Col xs={3} className=\"navIconCont\">\r\n                    <FontAwesomeIcon\r\n                      className=\"faIcon\"\r\n                      icon={faUserAlt}\r\n                      color=\"white\"\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"auto\" className=\"testLineText\">\r\n                    <span className=\"navTagItem\">Profile</span>\r\n                  </Col>\r\n                </Col>\r\n              </Link>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faEllipsisH}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">More</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row>\r\n              <Col>\r\n                <Button id=\"postButton\" size=\"lg\" block>\r\n                  Post\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <Container className=\"sidenavContainer\">\r\n            <Row id=\"UserNameDisplay\">\r\n              <Col className=\"userInfoCont\">\r\n                <Col md=\"auto\" className=\"avatarCont\">\r\n                  <Avatar\r\n                    name={profileUsername}\r\n                    className=\"avatarIcon\"\r\n                    size=\"50px\"\r\n                  />\r\n                </Col>\r\n                <Col className=\"usernameCont\">\r\n                  <AuthenticationButton />\r\n                  <h3 id=\"displayNavUsername\">\r\n                    {profileUsername ? <p>@{profileUsername}</p> : \"\"}\r\n                  </h3>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Row>\r\n      </Container>\r\n      <Row>\r\n        <Col xs={3}></Col>\r\n        <Col>\r\n          {/*   I NEED A SWITCH HERE SO I CAN RENDER DIFFERENT COMPONENTS */}\r\n          {navComp}\r\n          {/* <Feed /> */}\r\n          {/* <Profile /> */}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\n//auth0 React Authentication\r\n","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Create\\CreatePost\\CreatePost.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Settings\\Settings.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Dashboard\\NewPost\\NewPost.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Public.js",["105","106"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { UsernameContext } from \"../../Utils/UsernameContext/UsernameContext\";\r\nimport { Button, Row, Col, Container } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Public() {\r\n  const userContext = useContext(UsernameContext);\r\n  const profileUsername = userContext.profile.usernameContext;\r\n\r\n  const [foundUser, setFoundUser] = useState(\"\");\r\n  const [foundUserPosts, setFoundUserPosts] = useState(\"\");\r\n\r\n  const getWindowLocation = () => {\r\n    axios.get(`/api/public${window.location.pathname}`).then((res) => {\r\n      console.log(res.data[0]);\r\n      setFoundUser(res.data[0].username);\r\n      setFoundUserPosts(res.data[0].posts);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWindowLocation();\r\n  }, [foundUser]);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h1>{foundUser}</h1>\r\n          <Button\r\n            onClick={() => {\r\n              console.log(\"finding user\");\r\n              getWindowLocation();\r\n            }}\r\n            placeholder=\"button that does something\"\r\n          >\r\n            this is a BUTTON\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n",["107","108"],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Feed.js",["109","110"],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Footer\\Footer.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Footer\\Search.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Sidenav\\Sidenav.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Profile\\Profile.js",["111","112"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Button, Modal, Form } from \"react-bootstrap\";\r\nimport \"./Profile.css\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ProfileFeed from \"../Profile/ProfileFeed/ProfileFeed\";\r\nimport { UsernameContext } from \"../../../Utils/UsernameContext/UsernameContext\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Profile() {\r\n  const usernameContext = useContext(UsernameContext);\r\n  const profileID = usernameContext.profile._id;\r\n\r\n  const [profileTab, setProfileTab] = useState(<ProfileFeed />);\r\n  const [show, setShow] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [getName, setGetName] = useState();\r\n  const [getBio, setGetBio] = useState();\r\n  const [getHandle, setGetHandle] = useState(\"\");\r\n\r\n  const profileToFeed = () => {\r\n    setProfileTab(<ProfileFeed />);\r\n  };\r\n\r\n  const getProfileInfo = () => {\r\n    axios\r\n      .get(`/api/user/${profileID}`)\r\n      .then((res) => {\r\n        console.log(\"res.data\", res.data);\r\n        setGetName(res.data.profile.customHandle);\r\n        setGetBio(res.data.profile.bio);\r\n        setGetHandle(res.data.username);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProfileInfo();\r\n  }, [profileID]);\r\n\r\n  const launchModal = () => {\r\n    setShow(true);\r\n    setName(getName);\r\n    setBio(getBio);\r\n  };\r\n\r\n  const nameHandleing = () => {\r\n    console.log(`name: ${name}, getName: ${getName}`);\r\n    setName(getName);\r\n  };\r\n\r\n  const bioHandling = () => {\r\n    setBio(getBio);\r\n  };\r\n\r\n  const submit = () => {\r\n    setShow(false);\r\n    console.log(\r\n      \"name: \",\r\n      name,\r\n      \"bio: \",\r\n      bio,\r\n      \"profileID: \",\r\n      profileID,\r\n      \"getName: \",\r\n      getName,\r\n      \"getBio:\",\r\n      getBio,\r\n      \"getHandle:\",\r\n      getHandle\r\n    );\r\n\r\n    axios\r\n      .post(`/api/user/profileUpdate/${profileID}`, {\r\n        profile: {\r\n          customHandle: name,\r\n          bio: bio,\r\n          author_id: profileID,\r\n        },\r\n      })\r\n      .then((res) => {})\r\n      .catch((err) => {\r\n        console.log(\"err.response\", err.response);\r\n        console.log(\"err.response.status\", err.response.status);\r\n        console.log(\"err.response.headers\", err.response.headers);\r\n      })\r\n      .then(() => {\r\n        setName(name);\r\n        setBio(getBio);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"profileCont\">\r\n      <Container className=\"prfNameCont\">\r\n        <Row>\r\n          <Col xs=\"auto\" className=\"backArrow\">\r\n            <FontAwesomeIcon\r\n              icon={faArrowLeft}\r\n              className=\"backArrow\"\r\n              color=\"white\"\r\n            />\r\n          </Col>\r\n          <Col className=\"prfUsername\">\r\n            <p className=\"prfUsername\">Username</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container className=\"prfHeroImageCont\">\r\n        <Row>\r\n          <Col className=\"imgPlaceholderCont\" />\r\n        </Row>\r\n      </Container>\r\n      <Container className=\"prfPicCont\">\r\n        <Row>\r\n          <Col xs=\"auto\" className=\"prfImgPlc\" />\r\n          <Col>\r\n            <Button\r\n              id=\"editPrfBtn\"\r\n              variant=\"outline-primary\"\r\n              onClick={() => launchModal()}\r\n            >\r\n              Edit profile\r\n            </Button>\r\n            <Modal size=\"sm\" show={show} ohHide={() => setShow(false)}>\r\n              <Modal.Header>\r\n                <Button onClick={() => setShow(false)}>X</Button>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\">\r\n                  Edit profile\r\n                </Modal.Title>\r\n                <Button onClick={() => submit()}>Save</Button>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form noValidate>\r\n                  <Form.Group controlId=\"formGroupName\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      defaultValue={getName}\r\n                      value={name}\r\n                      onFocus={() => {\r\n                        nameHandleing();\r\n                      }}\r\n                      // onClick={(e) => {}}\r\n                      onChange={(e) => {\r\n                        setName(e.target.value);\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formGroupBio\">\r\n                    <Form.Label>Bio</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      defaultValue={getBio}\r\n                      value={bio}\r\n                      onFocus={(e) => {\r\n                        bioHandling();\r\n                      }}\r\n                      onChange={(e) => {\r\n                        setBio(e.target.value);\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n              </Modal.Body>\r\n            </Modal>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container className=\"prfUsrInfoCont\">\r\n        <Row className=\"prfUsernameCont\">\r\n          <Col className=\"prfUsername\">{getName}</Col>\r\n          <Col className=\"prfAtUsername\">@{getHandle}</Col>\r\n        </Row>\r\n        <Row className=\"prfBioCont\">\r\n          <Col className=\"prfBio\">{getBio}</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>joined?</Col>\r\n        </Row>\r\n        <Row className=\"presenceCont\">\r\n          <Col className=\"followCount\">\r\n            <Col className=\"followNum\">256</Col>\r\n            <Col className=\"presenceText\">Following</Col>\r\n          </Col>\r\n          <Col className=\"followCount\">\r\n            <Col className=\"followingNum\">225</Col>\r\n            <Col className=\"presenceText\">Followers</Col>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container>\r\n        <Row className=\"profileNavBtns\">\r\n          <Col className=\"profileNavBtn\">Tweets</Col>\r\n          <Col className=\"profileNavBtn\">Tweets and replies</Col>\r\n          <Col className=\"profileNavBtn\">Media</Col>\r\n          <Col className=\"profileNavBtn\">Likes</Col>\r\n        </Row>\r\n      </Container>\r\n      <Row>{profileTab}</Row>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Profile\\ProfileFeed\\ProfileFeed.js",["113","114"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { UsernameContext } from \"../../../../Utils/UsernameContext/UsernameContext\";\r\nimport \"./ProfileFeed.css\";\r\nimport {\r\n  faRetweet,\r\n  faShare,\r\n  faEllipsisH,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faComment, faHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Avatar from \"react-avatar\";\r\n\r\nexport default function ProfileFeed() {\r\n  const usernameContext = useContext(UsernameContext);\r\n  const profileID = usernameContext.profile._id;\r\n  const userStatus = usernameContext.profile.isLoggedInContext;\r\n\r\n  const [feed, setFeed] = useState([]);\r\n  const [userId, setUserId] = useState();\r\n  const [feedUsername, setFeedUsername] = useState();\r\n\r\n  // \"profileID\" doesn't doesn't already have a profileID on first render.\r\n\r\n  const getFeedData = () => {\r\n    // console.log(\"usernameContext:\", usernameContext);\r\n    if (profileID === undefined) {\r\n      return console.log(\"loading...................\");\r\n    } else {\r\n      axios\r\n        .get(`/api/user/${profileID}`)\r\n        .then((res) => {\r\n          console.log(\"res.data.posts\", res.data.posts);\r\n          setUserId(res.data._id);\r\n          setFeed(res.data.posts);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFeedData();\r\n  }, [profileID]);\r\n\r\n  const usernameClick = () => {\r\n    console.log(\"Username clicked\");\r\n    console.log(\"feedUsername\", feedUsername);\r\n    axios\r\n      .get(`/api/user/${feedUsername}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"feedMain\">\r\n      <Container>\r\n        <ListGroup>\r\n          {userStatus\r\n            ? feed.reverse().map((feed) => (\r\n                <ListGroupItem key={feed} className=\"feedText\">\r\n                  <Container id=\"statusContainer\">\r\n                    <Row>\r\n                      <Col md=\"auto\" className=\"avaCont\">\r\n                        <Avatar\r\n                          className=\"feedAva\"\r\n                          name={feed.author}\r\n                          size=\"50px\"\r\n                        />\r\n                        {/* need image here */}\r\n                      </Col>\r\n                      <Col id=\"feedUserCont\">\r\n                        <Col id=\"feedUserIconBtnCont\">\r\n                          <Col id=\"usernameFeedCont\">\r\n                            <h6\r\n                              className=\"usernameFeed\"\r\n                              onMouseEnter={() => {\r\n                                setFeedUsername(feed.postAuthor_id);\r\n                              }}\r\n                              onMouseLeave={() => {\r\n                                setFeedUsername(\"\");\r\n                              }}\r\n                              onClick={() => {\r\n                                setFeedUsername(feed.postAuthor_id);\r\n                                usernameClick();\r\n                              }}\r\n                              value={feed.postAuthor_id}\r\n                            >\r\n                              @{feed.author}\r\n                            </h6>\r\n                          </Col>\r\n                          <Col md=\"auto\" id=\"optionsBtnCont\">\r\n                            <Button\r\n                              id=\"feedMoreIC\"\r\n                              onClick={() => {\r\n                                console.log(\"options clicked.\");\r\n                              }}\r\n                            >\r\n                              <FontAwesomeIcon icon={faEllipsisH} />\r\n                            </Button>\r\n                          </Col>\r\n                        </Col>\r\n                        <Col id=\"feedStatus\">\r\n                          <p>{feed.post}</p>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Container>\r\n                      <Row className=\"userIntBtns\">\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faComment}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faRetweet}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faHeart}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faShare}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                      </Row>\r\n                    </Container>\r\n                  </Container>\r\n                </ListGroupItem>\r\n              ))\r\n            : \"loading\"}\r\n        </ListGroup>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\LoginBtn\\Auth0Login.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\LogoutBtn\\Auth0LogoutBtn.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\LogoutBtn\\Auth0Profile.js",["115","116","117","118"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { UsernameContext } from \"../../../Utils/UsernameContext/UsernameContext\";\r\nimport \"./style.css\";\r\n\r\nexport default function Auth0Profile() {\r\n  const userInfoContext = useContext(UsernameContext);\r\n  const { user, isAuthenticated, isLoading } = useAuth0();\r\n  // console.log(\"UserContext from Authprofile\", userInfoContext);\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    isAuthenticated && (\r\n      <div>\r\n        <img src={user.picture} alt={user.name} />\r\n        <h2>{user.name}</h2>\r\n        <p>{user.email}</p>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\AuthenticationButton.js",["119"],"import React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoginButton from \"./LoginBtn/Auth0Login\";\r\nimport LogoutButton from \"./LogoutBtn/Auth0LogoutBtn\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport axios from \"axios\";\r\nimport { UsernameContext } from \"../../Utils/UsernameContext/UsernameContext\";\r\n\r\nexport default function AuthenticationButton() {\r\n  const history = useHistory();\r\n  const { user, isAuthenticated, isLoading } = useAuth0();\r\n  const context = useContext(UsernameContext);\r\n\r\n  // console.log(\"auth btn context\", context);\r\n\r\n  useEffect(() => {\r\n    const doSomething = async () => {\r\n      axios\r\n        .post(\"/api/user/auth0Login\", {\r\n          username: user.name,\r\n          email: user.email,\r\n          given_name: user.given_name,\r\n          nickname: user.given_name,\r\n        })\r\n        .then((res) => {\r\n          console.log(\"res\", res);\r\n          context.setProfile({\r\n            _id: res.data[0]._id,\r\n            username: res.data[0].username,\r\n            email: res.data[0].email,\r\n            nickname: res.data[0].nickname,\r\n          });\r\n          history.push(\"/Dashboard\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err.response\", err.response);\r\n          console.log(\"err.response.status\", err.response.status);\r\n          console.log(\"err.response.headers\", err.response.headers);\r\n        });\r\n    };\r\n    if (!isLoading) {\r\n      doSomething();\r\n    }\r\n  }, [isLoading]);\r\n\r\n  return isAuthenticated ? <LogoutButton /> : <LoginButton />;\r\n}\r\n",{"ruleId":"120","severity":1,"message":"121","line":13,"column":10,"nodeType":"122","messageId":"123","endLine":13,"endColumn":19},{"ruleId":"120","severity":1,"message":"124","line":24,"column":8,"nodeType":"122","messageId":"123","endLine":24,"endColumn":20},{"ruleId":"120","severity":1,"message":"125","line":2,"column":39,"nodeType":"122","messageId":"123","endLine":2,"endColumn":48},{"ruleId":"120","severity":1,"message":"126","line":29,"column":9,"nodeType":"122","messageId":"123","endLine":29,"endColumn":17},{"ruleId":"120","severity":1,"message":"127","line":31,"column":10,"nodeType":"122","messageId":"123","endLine":31,"endColumn":14},{"ruleId":"120","severity":1,"message":"128","line":32,"column":11,"nodeType":"122","messageId":"123","endLine":32,"endColumn":15},{"ruleId":"120","severity":1,"message":"129","line":32,"column":17,"nodeType":"122","messageId":"123","endLine":32,"endColumn":32},{"ruleId":"120","severity":1,"message":"130","line":34,"column":9,"nodeType":"122","messageId":"123","endLine":34,"endColumn":16},{"ruleId":"120","severity":1,"message":"131","line":40,"column":9,"nodeType":"122","messageId":"123","endLine":40,"endColumn":26},{"ruleId":"120","severity":1,"message":"132","line":8,"column":9,"nodeType":"122","messageId":"123","endLine":8,"endColumn":24},{"ruleId":"120","severity":1,"message":"133","line":11,"column":10,"nodeType":"122","messageId":"123","endLine":11,"endColumn":24},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"120","severity":1,"message":"138","line":30,"column":10,"nodeType":"122","messageId":"123","endLine":30,"endColumn":16},{"ruleId":"139","severity":1,"message":"140","line":55,"column":6,"nodeType":"141","endLine":55,"endColumn":17,"suggestions":"142"},{"ruleId":"120","severity":1,"message":"143","line":22,"column":9,"nodeType":"122","messageId":"123","endLine":22,"endColumn":22},{"ruleId":"139","severity":1,"message":"144","line":42,"column":6,"nodeType":"141","endLine":42,"endColumn":17,"suggestions":"145"},{"ruleId":"120","severity":1,"message":"138","line":28,"column":10,"nodeType":"122","messageId":"123","endLine":28,"endColumn":16},{"ruleId":"139","severity":1,"message":"140","line":53,"column":6,"nodeType":"141","endLine":53,"endColumn":17,"suggestions":"146"},{"ruleId":"120","severity":1,"message":"147","line":1,"column":29,"nodeType":"122","messageId":"123","endLine":1,"endColumn":37},{"ruleId":"120","severity":1,"message":"125","line":1,"column":39,"nodeType":"122","messageId":"123","endLine":1,"endColumn":48},{"ruleId":"120","severity":1,"message":"148","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"120","severity":1,"message":"149","line":8,"column":9,"nodeType":"122","messageId":"123","endLine":8,"endColumn":24},{"ruleId":"139","severity":1,"message":"150","line":44,"column":6,"nodeType":"141","endLine":44,"endColumn":17,"suggestions":"151"},"no-unused-vars","'withAuth0' is defined but never used.","Identifier","unusedVar","'LogoutButton' is defined but never used.","'useEffect' is defined but never used.","'existing' is assigned a value but never used.","'LSID' is assigned a value but never used.","'user' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'LocalID' is assigned a value but never used.","'checkLocalContext' is assigned a value but never used.","'profileUsername' is assigned a value but never used.","'foundUserPosts' is assigned a value but never used.","no-native-reassign",["152"],"no-negated-in-lhs",["153"],"'userId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFeedData'. Either include it or remove the dependency array.","ArrayExpression",["154"],"'profileToFeed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProfileInfo'. Either include it or remove the dependency array.",["155"],["156"],"'useState' is defined but never used.","'Button' is defined but never used.","'userInfoContext' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'context', 'history', 'user.email', 'user.given_name', and 'user.name'. Either include them or remove the dependency array.",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"158","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [getFeedData, profileID]",{"range":"165","text":"166"},"Update the dependencies array to be: [getProfileInfo, profileID]",{"range":"167","text":"168"},{"range":"169","text":"166"},"Update the dependencies array to be: [context, history, isLoading, user.email, user.given_name, user.name]",{"range":"170","text":"171"},[1607,1618],"[getFeedData, profileID]",[1447,1458],"[getProfileInfo, profileID]",[1575,1586],[1497,1508],"[context, history, isLoading, user.email, user.given_name, user.name]"]