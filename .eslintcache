[{"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\index.js":"1","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\App.js":"2","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Landing\\Landing.js":"3","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Utils\\UsernameContext\\UsernameContext.js":"4","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\SignInForm.js":"5","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\RegistrationForm.js":"6","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Dashboard\\Dashboard.js":"7","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Create\\CreatePost\\CreatePost.js":"8","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Settings\\Settings.js":"9","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Dashboard\\NewPost\\NewPost.js":"10","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Public.js":"11","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Feed.js":"12","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Footer\\Footer.js":"13","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Footer\\Search.js":"14","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Sidenav\\Sidenav.js":"15","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Profile\\Profile.js":"16","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Profile\\ProfileFeed\\ProfileFeed.js":"17","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\LoginBtn\\Auth0Login.js":"18","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\LogoutBtn\\Auth0LogoutBtn.js":"19"},{"size":757,"mtime":1630625282852,"results":"20","hashOfConfig":"21"},{"size":1638,"mtime":1625680316219,"results":"22","hashOfConfig":"21"},{"size":9412,"mtime":1630105217317,"results":"23","hashOfConfig":"21"},{"size":139,"mtime":1608769579655,"results":"24","hashOfConfig":"21"},{"size":6453,"mtime":1626122557581,"results":"25","hashOfConfig":"21"},{"size":5217,"mtime":1619545437382,"results":"26","hashOfConfig":"21"},{"size":9415,"mtime":1628190246321,"results":"27","hashOfConfig":"21"},{"size":660,"mtime":1610654151699,"results":"28","hashOfConfig":"21"},{"size":2464,"mtime":1625680647442,"results":"29","hashOfConfig":"21"},{"size":2130,"mtime":1620070388785,"results":"30","hashOfConfig":"21"},{"size":1233,"mtime":1620152608004,"results":"31","hashOfConfig":"32"},{"size":7091,"mtime":1624571406455,"results":"33","hashOfConfig":"21"},{"size":392,"mtime":1620070421198,"results":"34","hashOfConfig":"21"},{"size":2569,"mtime":1613429208433,"results":"35","hashOfConfig":"32"},{"size":7186,"mtime":1621452515370,"results":"36","hashOfConfig":"32"},{"size":6408,"mtime":1625598206148,"results":"37","hashOfConfig":"21"},{"size":6307,"mtime":1622571792093,"results":"38","hashOfConfig":"21"},{"size":423,"mtime":1629500233024,"results":"39","hashOfConfig":"21"},{"size":524,"mtime":1631142493504,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x518k6",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"dg2gsn",{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\index.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\App.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Landing\\Landing.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Utils\\UsernameContext\\UsernameContext.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\SignInForm.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\RegistrationForm.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Dashboard\\Dashboard.js",["85","86"],"import { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { UsernameContext } from \"../../Utils/UsernameContext/UsernameContext\";\r\nimport Feed from \"../Public/Feed\";\r\nimport Avatar from \"react-avatar\";\r\nimport \"./Dashboard.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  faHome,\r\n  faHashtag,\r\n  faBell,\r\n  faEnvelope,\r\n  faBookmark,\r\n  faStream,\r\n  faUserAlt,\r\n  faEllipsisH,\r\n  faAngleUp,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Profile from \"../Public/Profile/Profile\";\r\nimport \"../../Components/Sidenav/Sidenav.css\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Dashboard() {\r\n  const userContext = useContext(UsernameContext);\r\n  const profileUsername = userContext.profile.usernameContext;\r\n  const existing = localStorage.getItem(\"userContextID\");\r\n  const [navComp, setNavComp] = useState(<Feed />);\r\n  const [LSID, setLSID] = useState(\"\");\r\n\r\n  const LoStGet = localStorage.getItem(\"userContextID\");\r\n\r\n  useEffect(() => {\r\n    checkLocal();\r\n  }, [userContext]);\r\n\r\n  const checkLocal = () => {\r\n    console.log(\"userContext\", userContext);\r\n    setLSID(localStorage.getItem(\"userContextID\"));\r\n    // console.log(\"userContext\", userContext);\r\n    // console.log(\"window.performance\", window.performance);\r\n    if (window.performance.navigation.type === 0) {\r\n      console.log(\"window loaded. \");\r\n      localStorage.setItem(\"userContextID\", userContext.profile._id);\r\n    } else if (window.performance.navigation.type === 1) {\r\n      console.log(\"userContext refresh\", userContext);\r\n      setLSID(LoStGet);\r\n      axios.get(`/api/user/${LoStGet}`).then((res) => {\r\n        console.log(`res call from window refresh`, res.data);\r\n      });\r\n    }\r\n\r\n    if (LSID) {\r\n      // context.setProfile({ _id: LSID });\r\n\r\n      console.log(\"LSID: \", LSID);\r\n    } else {\r\n      console.log(\"nothing here\");\r\n    }\r\n  };\r\n\r\n  const toFeed = () => {\r\n    setNavComp(<Feed />);\r\n  };\r\n\r\n  const toProfile = () => {\r\n    setNavComp(<Profile />);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Container className=\"sideNavCont\">\r\n        <Row>\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"heroIcon\"\r\n                    icon={faAngleUp}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Link>\r\n                <Col\r\n                  className=\"testLine\"\r\n                  onClick={() => {\r\n                    toFeed();\r\n                  }}\r\n                >\r\n                  <Col xs={3} className=\"navIconCont\">\r\n                    <FontAwesomeIcon\r\n                      className=\"faIcon\"\r\n                      icon={faHome}\r\n                      color=\"white\"\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"auto\" className=\"testLineText\">\r\n                    <span className=\"navTagItem\">Home</span>\r\n                  </Col>\r\n                </Col>\r\n              </Link>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faHashtag}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">Explore</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faBell}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">Notifications</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                {\" \"}\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faEnvelope}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">Messages</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faBookmark}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">Bookmarks</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faStream}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">Lists</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Link>\r\n                <Col\r\n                  className=\"testLine\"\r\n                  onClick={() => {\r\n                    toProfile();\r\n                  }}\r\n                >\r\n                  <Col xs={3} className=\"navIconCont\">\r\n                    <FontAwesomeIcon\r\n                      className=\"faIcon\"\r\n                      icon={faUserAlt}\r\n                      color=\"white\"\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"auto\" className=\"testLineText\">\r\n                    <span className=\"navTagItem\">Profile</span>\r\n                  </Col>\r\n                </Col>\r\n              </Link>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row xs=\"auto\" className=\"sidenavItem\">\r\n              <Col className=\"testLine\">\r\n                <Col xs={3} className=\"navIconCont\">\r\n                  <FontAwesomeIcon\r\n                    className=\"faIcon\"\r\n                    icon={faEllipsisH}\r\n                    color=\"white\"\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"testLineText\">\r\n                  <span className=\"navTagItem\">More</span>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          {/*  */}\r\n          <Container className=\"sidenavContainer\">\r\n            <Row>\r\n              <Col>\r\n                <Button id=\"postButton\" size=\"lg\" block>\r\n                  Post\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <Container className=\"sidenavContainer\">\r\n            <Row id=\"UserNameDisplay\">\r\n              <Col className=\"userInfoCont\">\r\n                <Col md=\"auto\" className=\"avatarCont\">\r\n                  <Avatar\r\n                    name={profileUsername}\r\n                    className=\"avatarIcon\"\r\n                    size=\"50px\"\r\n                  />\r\n                </Col>\r\n                <Col className=\"usernameCont\">\r\n                  <h3 id=\"displayNavUsername\">\r\n                    {profileUsername ? <p>@{profileUsername}</p> : \"\"}\r\n                  </h3>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Row>\r\n      </Container>\r\n      <Row>\r\n        <Col xs={3}></Col>\r\n        <Col>\r\n          {/*   I NEED A SWITCH HERE SO I CAN RENDER DIFFERENT COMPONENTS */}\r\n          {navComp}\r\n          {/* <Feed /> */}\r\n          {/* <Profile /> */}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\n//auth0 React Authentication\r\n","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Create\\CreatePost\\CreatePost.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Settings\\Settings.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Dashboard\\NewPost\\NewPost.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Public.js",["87","88"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { UsernameContext } from \"../../Utils/UsernameContext/UsernameContext\";\r\nimport { Button, Row, Col, Container } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Public() {\r\n  const userContext = useContext(UsernameContext);\r\n  const profileUsername = userContext.profile.usernameContext;\r\n\r\n  const [foundUser, setFoundUser] = useState(\"\");\r\n  const [foundUserPosts, setFoundUserPosts] = useState(\"\");\r\n\r\n  const getWindowLocation = () => {\r\n    axios.get(`/api/public${window.location.pathname}`).then((res) => {\r\n      console.log(res.data[0]);\r\n      setFoundUser(res.data[0].username);\r\n      setFoundUserPosts(res.data[0].posts);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWindowLocation();\r\n  }, [foundUser]);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h1>{foundUser}</h1>\r\n          <Button\r\n            onClick={() => {\r\n              console.log(\"finding user\");\r\n              getWindowLocation();\r\n            }}\r\n            placeholder=\"button that does something\"\r\n          >\r\n            this is a BUTTON\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n",["89","90"],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Feed.js",["91","92"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { UsernameContext } from \"../../Utils/UsernameContext/UsernameContext\";\r\nimport \"./Feed.css\";\r\nimport {\r\n  faRetweet,\r\n  faShare,\r\n  faEllipsisH,\r\n  faMeteor,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faComment, faHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Avatar from \"react-avatar\";\r\nimport NewPost from \"../Dashboard/NewPost/NewPost\";\r\n\r\nexport default function Feed() {\r\n  const usernameContext = useContext(UsernameContext);\r\n  const profileID = usernameContext.profile._id;\r\n  const userStatus = usernameContext.profile.isLoggedInContext;\r\n\r\n  const [feed, setFeed] = useState([]);\r\n  const [userId, setUserId] = useState();\r\n  const [feedUsername, setFeedUsername] = useState();\r\n\r\n  // \"profileID\" doesn't doesn't already have a profileID on first render.\r\n\r\n  const getFeedData = () => {\r\n    // console.log(\"usernameContext:\", usernameContext);\r\n    if (profileID === undefined) {\r\n      return console.log(\"loading...................\");\r\n    } else {\r\n      axios\r\n        .get(`/api/user/${profileID}`)\r\n        .then((res) => {\r\n          console.log(\"res.data.posts\", res.data.posts);\r\n          setUserId(res.data._id);\r\n          setFeed(res.data.posts);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFeedData();\r\n  }, [profileID]);\r\n\r\n  const usernameClick = () => {\r\n    console.log(\"Username clicked\");\r\n    console.log(\"feedUsername\", feedUsername);\r\n    axios\r\n      .get(`/api/user/${feedUsername}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"feedMain\">\r\n      <Col id=\"contentContainer\">\r\n        <Row>\r\n          <Container>\r\n            <Col id=\"category\">\r\n              Latest\r\n              <Button className=\"latestSortIcon\" variant=\"outline-dark, dark\">\r\n                <FontAwesomeIcon\r\n                  icon={faMeteor}\r\n                  id=\"latestSortBtn\"\r\n                  onClick={() => {\r\n                    console.log(\"Meteor clicked.\");\r\n                  }}\r\n                />\r\n              </Button>\r\n            </Col>\r\n          </Container>\r\n        </Row>\r\n        <Container id=\"postCards\">\r\n          <Row>\r\n            <NewPost />\r\n            <Col className=\"divider\" />\r\n          </Row>\r\n        </Container>\r\n      </Col>\r\n\r\n      <Container className=\"statusFeedContainer\">\r\n        <ListGroup>\r\n          {userStatus\r\n            ? feed.reverse().map((feed) => (\r\n                <ListGroupItem key={feed} className=\"feedText\">\r\n                  <Container id=\"statusContainer\">\r\n                    <Row>\r\n                      <Col md=\"auto\" className=\"avaCont\">\r\n                        <Avatar\r\n                          className=\"feedAva\"\r\n                          name={feed.author}\r\n                          size=\"50px\"\r\n                        />\r\n                        {/* need image here */}\r\n                      </Col>\r\n                      <Col id=\"feedUserCont\">\r\n                        <Col id=\"feedUserIconBtnCont\">\r\n                          <Col id=\"usernameFeedCont\">\r\n                            <h6\r\n                              className=\"usernameFeed\"\r\n                              onMouseEnter={() => {\r\n                                setFeedUsername(feed.postAuthor_id);\r\n                              }}\r\n                              onMouseLeave={() => {\r\n                                setFeedUsername(\"\");\r\n                              }}\r\n                              onClick={() => {\r\n                                setFeedUsername(feed.postAuthor_id);\r\n                                usernameClick();\r\n                              }}\r\n                              value={feed.postAuthor_id}\r\n                            >\r\n                              @{feed.author}\r\n                            </h6>\r\n                          </Col>\r\n                          <Col md=\"auto\" id=\"optionsBtnCont\">\r\n                            <Button\r\n                              id=\"feedMoreIC\"\r\n                              onClick={() => {\r\n                                console.log(\"options clicked.\");\r\n                              }}\r\n                            >\r\n                              <FontAwesomeIcon icon={faEllipsisH} />\r\n                            </Button>\r\n                          </Col>\r\n                        </Col>\r\n                        <Col id=\"feedStatus\">\r\n                          <p>{feed.post}</p>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Container>\r\n                      <Row className=\"userIntBtns\">\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faComment}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faRetweet}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faHeart}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faShare}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                      </Row>\r\n                    </Container>\r\n                  </Container>\r\n                </ListGroupItem>\r\n              ))\r\n            : \"loading\"}\r\n        </ListGroup>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Footer\\Footer.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Footer\\Search.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Sidenav\\Sidenav.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Profile\\Profile.js",["93","94"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Button, Modal, Form } from \"react-bootstrap\";\r\nimport \"./Profile.css\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ProfileFeed from \"../Profile/ProfileFeed/ProfileFeed\";\r\nimport { UsernameContext } from \"../../../Utils/UsernameContext/UsernameContext\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Profile() {\r\n  const usernameContext = useContext(UsernameContext);\r\n  const profileID = usernameContext.profile._id;\r\n\r\n  const [profileTab, setProfileTab] = useState(<ProfileFeed />);\r\n  const [show, setShow] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [getName, setGetName] = useState();\r\n  const [getBio, setGetBio] = useState();\r\n  const [getHandle, setGetHandle] = useState(\"\");\r\n\r\n  const profileToFeed = () => {\r\n    setProfileTab(<ProfileFeed />);\r\n  };\r\n\r\n  const getProfileInfo = () => {\r\n    axios\r\n      .get(`/api/user/${profileID}`)\r\n      .then((res) => {\r\n        console.log(\"res.data\", res.data);\r\n        setGetName(res.data.profile.customHandle);\r\n        setGetBio(res.data.profile.bio);\r\n        setGetHandle(res.data.username);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProfileInfo();\r\n  }, [profileID]);\r\n\r\n  const launchModal = () => {\r\n    setShow(true);\r\n    setName(getName);\r\n    setBio(getBio);\r\n  };\r\n\r\n  const nameHandleing = () => {\r\n    console.log(`name: ${name}, getName: ${getName}`);\r\n    setName(getName);\r\n  };\r\n\r\n  const bioHandling = () => {\r\n    setBio(getBio);\r\n  };\r\n\r\n  const submit = () => {\r\n    setShow(false);\r\n    console.log(\r\n      \"name: \",\r\n      name,\r\n      \"bio: \",\r\n      bio,\r\n      \"profileID: \",\r\n      profileID,\r\n      \"getName: \",\r\n      getName,\r\n      \"getBio:\",\r\n      getBio,\r\n      \"getHandle:\",\r\n      getHandle\r\n    );\r\n\r\n    axios\r\n      .post(`/api/user/profileUpdate/${profileID}`, {\r\n        profile: {\r\n          customHandle: name,\r\n          bio: bio,\r\n          author_id: profileID,\r\n        },\r\n      })\r\n      .then((res) => {})\r\n      .catch((err) => {\r\n        console.log(\"err.response\", err.response);\r\n        console.log(\"err.response.status\", err.response.status);\r\n        console.log(\"err.response.headers\", err.response.headers);\r\n      })\r\n      .then(() => {\r\n        setName(name);\r\n        setBio(getBio);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"profileCont\">\r\n      <Container className=\"prfNameCont\">\r\n        <Row>\r\n          <Col xs=\"auto\" className=\"backArrow\">\r\n            <FontAwesomeIcon\r\n              icon={faArrowLeft}\r\n              className=\"backArrow\"\r\n              color=\"white\"\r\n            />\r\n          </Col>\r\n          <Col className=\"prfUsername\">\r\n            <p className=\"prfUsername\">Username</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container className=\"prfHeroImageCont\">\r\n        <Row>\r\n          <Col className=\"imgPlaceholderCont\" />\r\n        </Row>\r\n      </Container>\r\n      <Container className=\"prfPicCont\">\r\n        <Row>\r\n          <Col xs=\"auto\" className=\"prfImgPlc\" />\r\n          <Col>\r\n            <Button\r\n              id=\"editPrfBtn\"\r\n              variant=\"outline-primary\"\r\n              onClick={() => launchModal()}\r\n            >\r\n              Edit profile\r\n            </Button>\r\n            <Modal size=\"sm\" show={show} ohHide={() => setShow(false)}>\r\n              <Modal.Header>\r\n                <Button onClick={() => setShow(false)}>X</Button>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\">\r\n                  Edit profile\r\n                </Modal.Title>\r\n                <Button onClick={() => submit()}>Save</Button>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form noValidate>\r\n                  <Form.Group controlId=\"formGroupName\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      defaultValue={getName}\r\n                      value={name}\r\n                      onFocus={() => {\r\n                        nameHandleing();\r\n                      }}\r\n                      // onClick={(e) => {}}\r\n                      onChange={(e) => {\r\n                        setName(e.target.value);\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formGroupBio\">\r\n                    <Form.Label>Bio</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      defaultValue={getBio}\r\n                      value={bio}\r\n                      onFocus={(e) => {\r\n                        bioHandling();\r\n                      }}\r\n                      onChange={(e) => {\r\n                        setBio(e.target.value);\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n              </Modal.Body>\r\n            </Modal>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container className=\"prfUsrInfoCont\">\r\n        <Row className=\"prfUsernameCont\">\r\n          <Col className=\"prfUsername\">{getName}</Col>\r\n          <Col className=\"prfAtUsername\">@{getHandle}</Col>\r\n        </Row>\r\n        <Row className=\"prfBioCont\">\r\n          <Col className=\"prfBio\">{getBio}</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>joined?</Col>\r\n        </Row>\r\n        <Row className=\"presenceCont\">\r\n          <Col className=\"followCount\">\r\n            <Col className=\"followNum\">256</Col>\r\n            <Col className=\"presenceText\">Following</Col>\r\n          </Col>\r\n          <Col className=\"followCount\">\r\n            <Col className=\"followingNum\">225</Col>\r\n            <Col className=\"presenceText\">Followers</Col>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container>\r\n        <Row className=\"profileNavBtns\">\r\n          <Col className=\"profileNavBtn\">Tweets</Col>\r\n          <Col className=\"profileNavBtn\">Tweets and replies</Col>\r\n          <Col className=\"profileNavBtn\">Media</Col>\r\n          <Col className=\"profileNavBtn\">Likes</Col>\r\n        </Row>\r\n      </Container>\r\n      <Row>{profileTab}</Row>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\Public\\Profile\\ProfileFeed\\ProfileFeed.js",["95","96"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { UsernameContext } from \"../../../../Utils/UsernameContext/UsernameContext\";\r\nimport \"./ProfileFeed.css\";\r\nimport {\r\n  faRetweet,\r\n  faShare,\r\n  faEllipsisH,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faComment, faHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Avatar from \"react-avatar\";\r\n\r\nexport default function ProfileFeed() {\r\n  const usernameContext = useContext(UsernameContext);\r\n  const profileID = usernameContext.profile._id;\r\n  const userStatus = usernameContext.profile.isLoggedInContext;\r\n\r\n  const [feed, setFeed] = useState([]);\r\n  const [userId, setUserId] = useState();\r\n  const [feedUsername, setFeedUsername] = useState();\r\n\r\n  // \"profileID\" doesn't doesn't already have a profileID on first render.\r\n\r\n  const getFeedData = () => {\r\n    // console.log(\"usernameContext:\", usernameContext);\r\n    if (profileID === undefined) {\r\n      return console.log(\"loading...................\");\r\n    } else {\r\n      axios\r\n        .get(`/api/user/${profileID}`)\r\n        .then((res) => {\r\n          console.log(\"res.data.posts\", res.data.posts);\r\n          setUserId(res.data._id);\r\n          setFeed(res.data.posts);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFeedData();\r\n  }, [profileID]);\r\n\r\n  const usernameClick = () => {\r\n    console.log(\"Username clicked\");\r\n    console.log(\"feedUsername\", feedUsername);\r\n    axios\r\n      .get(`/api/user/${feedUsername}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"feedMain\">\r\n      <Container>\r\n        <ListGroup>\r\n          {userStatus\r\n            ? feed.reverse().map((feed) => (\r\n                <ListGroupItem key={feed} className=\"feedText\">\r\n                  <Container id=\"statusContainer\">\r\n                    <Row>\r\n                      <Col md=\"auto\" className=\"avaCont\">\r\n                        <Avatar\r\n                          className=\"feedAva\"\r\n                          name={feed.author}\r\n                          size=\"50px\"\r\n                        />\r\n                        {/* need image here */}\r\n                      </Col>\r\n                      <Col id=\"feedUserCont\">\r\n                        <Col id=\"feedUserIconBtnCont\">\r\n                          <Col id=\"usernameFeedCont\">\r\n                            <h6\r\n                              className=\"usernameFeed\"\r\n                              onMouseEnter={() => {\r\n                                setFeedUsername(feed.postAuthor_id);\r\n                              }}\r\n                              onMouseLeave={() => {\r\n                                setFeedUsername(\"\");\r\n                              }}\r\n                              onClick={() => {\r\n                                setFeedUsername(feed.postAuthor_id);\r\n                                usernameClick();\r\n                              }}\r\n                              value={feed.postAuthor_id}\r\n                            >\r\n                              @{feed.author}\r\n                            </h6>\r\n                          </Col>\r\n                          <Col md=\"auto\" id=\"optionsBtnCont\">\r\n                            <Button\r\n                              id=\"feedMoreIC\"\r\n                              onClick={() => {\r\n                                console.log(\"options clicked.\");\r\n                              }}\r\n                            >\r\n                              <FontAwesomeIcon icon={faEllipsisH} />\r\n                            </Button>\r\n                          </Col>\r\n                        </Col>\r\n                        <Col id=\"feedStatus\">\r\n                          <p>{feed.post}</p>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Container>\r\n                      <Row className=\"userIntBtns\">\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faComment}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faRetweet}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faHeart}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Col className=\"iconCont\">\r\n                              <FontAwesomeIcon\r\n                                className=\"postIcon\"\r\n                                icon={faShare}\r\n                                // size=\"1x\"\r\n                              />\r\n                            </Col>\r\n                          </Col>\r\n                        </Row>\r\n                      </Row>\r\n                    </Container>\r\n                  </Container>\r\n                </ListGroupItem>\r\n              ))\r\n            : \"loading\"}\r\n        </ListGroup>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\LoginBtn\\Auth0Login.js",[],"C:\\Users\\agnt3\\Desktop\\Portfolio things\\signin\\src\\Components\\LoginForm\\LogoutBtn\\Auth0LogoutBtn.js",["97"],{"ruleId":"98","severity":1,"message":"99","line":27,"column":9,"nodeType":"100","messageId":"101","endLine":27,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":35,"column":6,"nodeType":"104","endLine":35,"endColumn":19,"suggestions":"105"},{"ruleId":"98","severity":1,"message":"106","line":8,"column":9,"nodeType":"100","messageId":"101","endLine":8,"endColumn":24},{"ruleId":"98","severity":1,"message":"107","line":11,"column":10,"nodeType":"100","messageId":"101","endLine":11,"endColumn":24},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"98","severity":1,"message":"112","line":30,"column":10,"nodeType":"100","messageId":"101","endLine":30,"endColumn":16},{"ruleId":"102","severity":1,"message":"113","line":55,"column":6,"nodeType":"104","endLine":55,"endColumn":17,"suggestions":"114"},{"ruleId":"98","severity":1,"message":"115","line":22,"column":9,"nodeType":"100","messageId":"101","endLine":22,"endColumn":22},{"ruleId":"102","severity":1,"message":"116","line":42,"column":6,"nodeType":"104","endLine":42,"endColumn":17,"suggestions":"117"},{"ruleId":"98","severity":1,"message":"112","line":28,"column":10,"nodeType":"100","messageId":"101","endLine":28,"endColumn":16},{"ruleId":"102","severity":1,"message":"113","line":53,"column":6,"nodeType":"104","endLine":53,"endColumn":17,"suggestions":"118"},{"ruleId":"98","severity":1,"message":"119","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":16},"no-unused-vars","'existing' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkLocal'. Either include it or remove the dependency array.","ArrayExpression",["120"],"'profileUsername' is assigned a value but never used.","'foundUserPosts' is assigned a value but never used.","no-native-reassign",["121"],"no-negated-in-lhs",["122"],"'userId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFeedData'. Either include it or remove the dependency array.",["123"],"'profileToFeed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProfileInfo'. Either include it or remove the dependency array.",["124"],["125"],"'Button' is defined but never used.",{"desc":"126","fix":"127"},"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"128","fix":"132"},"Update the dependencies array to be: [checkLocal, userContext]",{"range":"133","text":"134"},"Update the dependencies array to be: [getFeedData, profileID]",{"range":"135","text":"136"},"Update the dependencies array to be: [getProfileInfo, profileID]",{"range":"137","text":"138"},{"range":"139","text":"136"},[1138,1151],"[checkLocal, userContext]",[1621,1632],"[getFeedData, profileID]",[1447,1458],"[getProfileInfo, profileID]",[1575,1586]]