[{"C:\\Users\\MaybeXMarrow\\Desktop\\login\\src\\index.js":"1","C:\\Users\\MaybeXMarrow\\Desktop\\login\\src\\App.js":"2","C:\\Users\\MaybeXMarrow\\Desktop\\login\\src\\Components\\Dashboard\\Dashboard.js":"3","C:\\Users\\MaybeXMarrow\\Desktop\\login\\src\\Components\\UsernameContext\\UsernameContext.js":"4","C:\\Users\\MaybeXMarrow\\Desktop\\login\\src\\Components\\LoginForm\\LoginForm.js":"5"},{"size":494,"mtime":1608881317770,"results":"6","hashOfConfig":"7"},{"size":925,"mtime":1608881317763,"results":"8","hashOfConfig":"7"},{"size":1187,"mtime":1608881317765,"results":"9","hashOfConfig":"7"},{"size":134,"mtime":1608881317769,"results":"10","hashOfConfig":"7"},{"size":5322,"mtime":1608881777109,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1he7mt",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\Users\\MaybeXMarrow\\Desktop\\login\\src\\index.js",[],["25","26"],"C:\\Users\\MaybeXMarrow\\Desktop\\login\\src\\App.js",["27"],"import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport LoginForm from \"./Components/LoginForm/LoginForm\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\r\nimport { UsernameContext } from \"./Components/UsernameContext/UsernameContext\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profile: null,\r\n      setProfile: this.setProfile,\r\n    };\r\n  }\r\n\r\n  setProfile = (profile) => {\r\n    this.setState({ profile });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <UsernameContext.Provider value={this.state}>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={LoginForm} />\r\n            <Route path=\"/Dashboard\" exact component={Dashboard} />\r\n          </Switch>\r\n        </UsernameContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\MaybeXMarrow\\Desktop\\login\\src\\Components\\Dashboard\\Dashboard.js",[],"C:\\Users\\MaybeXMarrow\\Desktop\\login\\src\\Components\\UsernameContext\\UsernameContext.js",[],"C:\\Users\\MaybeXMarrow\\Desktop\\login\\src\\Components\\LoginForm\\LoginForm.js",["28"],"import {\r\n  Col,\r\n  Row,\r\n  Container,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { UsernameContext } from \"../UsernameContext/UsernameContext\";\r\nimport context from \"react-bootstrap/esm/AccordionContext\";\r\n\r\nconst validateForm = (errors) => {\r\n  let valid = true;\r\n  Object.values(errors).forEach((val) => val.length > 0 && (valid = false));\r\n  return valid;\r\n};\r\n\r\nexport default class LoginForm extends Component {\r\n  static contextType = UsernameContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoggedIn: null,\r\n      profile: null,\r\n      username: \"\",\r\n      userPassword: \"\",\r\n      redirect: null,\r\n      errors: {\r\n        username: \"\",\r\n        userPassword: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  _initProfile() {\r\n    const context = this.context;\r\n    context.setProfile(this.state);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._initProfile();\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    this._initProfile();\r\n\r\n    switch (name) {\r\n      case \"username\":\r\n        errors.username =\r\n          value.length < 3 || \"\"\r\n            ? \"Username must be at least 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n      case \"userPassword\":\r\n        errors.userPassword =\r\n          value.length < 3 || \"\"\r\n            ? \"Password must be at least 3 characters long!\"\r\n            : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ errors, [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (validateForm(this.state.errors)) {\r\n      axios\r\n        .post(\"/api/user\", {\r\n          username: this.state.username.replace(/\\s+/g, \"\"),\r\n          userPassword: this.state.userPassword.replace(/\\s+/g, \"\"),\r\n        })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            console.log(\"this.state\", this.state);\r\n            this.setState({\r\n              redirect: \"/Dashboard\",\r\n              userProfile: this.state.username,\r\n              isLoggedIn: true,\r\n              //async stte change\r\n            });\r\n          } else {\r\n            console.log(\"the status is NOT 200, its: \" + res.status);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          console.log(err.message);\r\n          console.log(err.stack);\r\n        });\r\n    } else {\r\n      console.error(\"Invalid Form\");\r\n      this.handleShow();\r\n    }\r\n  };\r\n\r\n  handleReset = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    // let props = this.props;\r\n    // let loggedInUser = this.context;\r\n    const { errors } = this.state;\r\n\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />;\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <UsernameContext.Provider value={this.state}>\r\n          <Row>\r\n            <Col>\r\n              <Form onSubmit={this.handleSubmit} noValidate>\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"basic-addon1\">\r\n                      Username\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    className=\"userInput\"\r\n                    placeholder=\"Username\"\r\n                    aria-label=\"Username\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.handleChange}\r\n                    aria-describedby=\"basic-addon1\"\r\n                    type=\"text\"\r\n                    autoComplete=\"username\"\r\n                    noValidate\r\n                  />\r\n                  {errors.username.length > 0 && (\r\n                    <span className=\"error\">{errors.username}</span>\r\n                  )}\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"basic-addon1\">\r\n                      Password\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    className=\"userInput\"\r\n                    placeholder=\"Password\"\r\n                    aria-label=\"Password\"\r\n                    name=\"userPassword\"\r\n                    value={this.state.userPassword}\r\n                    onChange={this.handleChange}\r\n                    aria-describedby=\"basic-addon1\"\r\n                    type=\"password\"\r\n                    autoComplete=\"password\"\r\n                    noValidate\r\n                  />\r\n                  {errors.userPassword.length > 0 && (\r\n                    <span className=\"error\">{errors.userPassword}</span>\r\n                  )}\r\n                </InputGroup>\r\n              </Form>\r\n              <Button type=\"submit\" onClick={this.handleSubmit}>\r\n                Submit\r\n              </Button>\r\n              <Button>Reset</Button>\r\n            </Col>\r\n          </Row>\r\n        </UsernameContext.Provider>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":17,"nodeType":"35","messageId":"36","endLine":1,"endColumn":26},{"ruleId":"33","severity":1,"message":"37","line":15,"column":8,"nodeType":"35","messageId":"36","endLine":15,"endColumn":15},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'context' is defined but never used.","no-global-assign","no-unsafe-negation"]